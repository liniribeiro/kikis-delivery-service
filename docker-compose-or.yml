version: '3.7'

services:
  elasticsearch:
    container_name: elasticsearch
    restart: "no"
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.2
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - kikis

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:6.7.2
    restart: "no"
    ports:
      - 5601:5601
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - kikis

  apm:
    hostname: apm
    container_name: apm
    restart: "no"
    expose:
      - 8200
    image: docker.elastic.co/apm/apm-server:6.7.2
    ports:
      - 8200:8200
    links:
      - elasticsearch
      - kibana
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - kikis

  redis:
    container_name: redis
    image: redis
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      - kikis
    restart: "no"

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  postgres:
    image: postgres:10.4
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgreSQL
    restart: "no"
    environment:
      POSTGRES_ROOT_PASSWORD: postgres
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - kikis

volumes:
  db_data:

networks:
  kikis:
    driver: bridge